


calculs faits avec SudoRules13 version M7Wbis2B22, puis, après 500, avec SudoRules-15c.1.12 basé sur CSP-Rules-1.0



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Ce qui est chargé

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;




(defglobal ?*SudoDir* = "/Users/berthier/Documents/INT-Projets/SudoRules/SudoRules13/")
(defglobal ?*RulesDir* = (str-cat ?*SudoDir* "Rules/"))

(defglobal ?*PuzzlesDir* = (str-cat "/Users/berthier/Documents/INT-Projets/SudoRules/SudoRules15b/" "Results/"))
(defglobal ?*grids-file* = (str-cat ?*PuzzlesDir* "Eleven-hardest-V2-26370/puzzles.txt"))
(defglobal ?*grids-file* = "/Users/berthier/Desktop/Eleven-hardest-V2-26370/puzzles.txt")

(defglobal ?*inference-engine* = CLIPS)
; (defglobal ?*inference-engine* = JESS)
(defglobal ?*rating-type* = "B")


(batch (str-cat ?*SudoDir* "Loaders/L0.clp"))
(load (str-cat ?*RulesDir* "T&E/contexts.clp"))
(load (str-cat ?*RulesDir* "T&E/TE1.clp"))
(bind ?*print-actions* FALSE)
(bind ?*print-hypothesis* FALSE)
(bind ?*print-solution* FALSE)


(load (str-cat ?*RulesDir* "SUBINT/L1-N1-naked-single.clp"))
(load (str-cat ?*RulesDir* "SUBINT/L1-H1-hidden-single.clp"))
(load (str-cat ?*RulesDir* "SUBINT/L1-RCiB.clp"))
(load (str-cat ?*RulesDir* "SUBINT/L1-BiRC.clp"))

(bind ?*SudoRulesSubVersionNumber* 7wbis2B22)
(bind ?*SudoRulesLevelSymbol* pB-NRCZT)



(load (str-cat ?*RulesDir* "CHAINS3D-M7wbis2/L2-BIVAL3D.clp"))


(load (str-cat ?*RulesDir* "CHAINS3D-M7wbis2/L2-NRCZT2.clp"))
(load (str-cat ?*RulesDir* "BRAIDS3D-M7wbis2-B22/L2-B-NRCZT2.clp"))

(load (str-cat ?*RulesDir* "CHAINS3D-M7wbis2/L3-NRCZT3.clp"))
(load (str-cat ?*RulesDir* "BRAIDS3D-M7wbis2-B22/L3-B-NRCZT3.clp"))



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

B3

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 967 33 ?*TE-B2*)

EN COURS:
(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 10291 84 ?*TE-B2*); 1st 100 10.8
(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 13220 86 ?*TE-B2*); 1st 100 10.7
TODO:
(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 17812 100 ?*TE-B2*); 1st 100 10.6


(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 6057 73 ?*TE-B2*); 1st 100 11.0


?*no-sol-list*
(length$ ?*solved-list*)
(pretty-print-ordered-nb-list ?*solved-list* 100)


(defglobal ?*TE-[B2]+B3* = (create$
;;; 7 entre 101 et 200
    114 117 124 150 153 160 188 
;;; 14 entre 201 et 300
    205 208 223 227 234 236 252 253 255 256 272 291 294 295
;;; 15 entre 301 et 400
    302 329 332 334 339 348 356 358 360 361 362 363 368 384 399 
;;; 12 entre 401 et 500
    426 434 443 446 461 462 466 472 482 484 495 499
;;; 26 entre 501 et 600
    504 505 513 517 522 524 527 530 532 538 544 548 551 556 561 562 563 564 567 576 580 585 586 587 590 600
;;; 8 entre 601 et 700
    602 614 630 632 636 650 665 700
;;; 13 entre 701 et 800
    702 717 718 724 725 732 749 750 753 755 763 772 787
;;; 10 entre 801 et 900
    817 827 828 836 841 843 860 864 878 882
;;; 12 entre 901 et 1000
    901 928 939 944 948 952 963 969 979 982 992 997

;;;;;;;;;;;;;;;;
;;; 24 entre 479 et 578
    482 484 495 499 504 505 513 517 522 524 527 530 532 538 544 548 551 556 561 562 563 564 567 576
;;; 45 entre 1686 et 1785
    1686 1688 1689 1690 1692 1693 1694 1695 1698 1699 1701 1702 1704 1706 1710 1711 1712 1717 1723 1726 1731 1738 1742 1743 1744 1746 1747 1748 1749 1751 1753 1756 1760 1761 1762 1763 1764 1767 1768 1770 1773 1774 1775 1781 1782
;;; 60 entre 3375 et 3474
    3375 3376 3377 3378 3379 3380 3382 3384 3385 3386 3387 3388 3389 3390 3391 3392 3395 3396 3399 3403 3406 3407 3410 3412 3413 3414 3416 3418 3421 3422 3423 3424 3425 3426 3429 3432 3433 3435 3436 3437 3438 3440 3443 3444 3447 3448 3449 3450 3451 3452 3455 3457 3459 3461 3464 3465 3466 3467 3470 3472
;;; 70 entre 6031 et 6130
    6031 6032 6034 6035 6036 6037 6039 6042 6043 6044 6045 6046 6047 6050 6052 6054 6056 6057 6059 6060 6063 6065 6067 6068 6070 6071 6073 6074 6075 6078 6079 6080 6081 6083 6084 6085 6086 6087 6089 6090 6091 6092 6093 6094 6095 6096 6098 6099 6100 6102 6104 6105 6107 6108 6109 6110 6111 6112 6113 6114 6115 6116 6118 6119 6121 6122 6123 6127 6128 6129
;;; 23 entre 7849 et 7948
    7851 7854 7856 7862 7864 7869 7871 7872 7873 7875 7876 7878 7883 7898 7906 7908 7910 7912 7914 7916 7920 7924 7942
;;; 49 entre 10276 et 10375
    10276 10277 10278 10279 10280 10281 10282 10283 10285 10286 10287 10290 10291 10294 10295 10296 10297 10300 10305 10306 10309 10310 10311 10313 10314 10317 10324 10326 10330 10331 10334 10336 10338 10340 10342 10343 10345 10347 10349 10353 10354 10357 10359 10361 10363 10365 10371 10374 10375
;;; 54 entre 13207 et 13306
    13207 13209 13212 13215 13216 13220 13222 13223 13224 13225 13228 13232 13233 13235 13236 13241 13243 13245 13246 13249 13252 13260 13261 13262 13265 13267 13271 13272 13273 13275 13276 13277 13279 13280 13281 13283 13284 13285 13286 13287 13288 13289 13290 13292 13294 13296 13298 13299 13300 13301 13302 13303 13304 13305
;;; 46 entre 17813 et 17912
    17813 17814 17818 17820 17821 17825 17827 17830 17831 17833 17834 17835 17837 17838 17841 17842 17843 17848 17849 17852 17853 17856 17857 17858 17860 17861 17862 17863 17866 17867 17876 17879 17880 17882 17884 17885 17886 17887 17889 17891 17893 17901 17905 17909 17911 17912
))



(length$  ?*TE-[B2]+B3*)


515 624 626(plein) 666 780 860 884 919(plein en phase 1) 964 (aussi) non-whip braid[3]
3433 3452 3467 
6081 6123
7914 
10280 10310 (plein en phase 1) 10329 10331 (plein en phase 1) 10837 
17827


(defglobal ?*TE-B3* = (sorted-union$ ?*TE-B2* ?solved-list* 10375))
(length$ ?*TE-B3*)
(pretty-print-ordered-nb-list ?*TE-B3* 100)

(defglobal ?*TE-B3* = (create$
;;; 0 entre 1 et 100
;;; 7 entre 101 et 200
    114 117 124 150 153 160 188 
;;; 14 entre 201 et 300
    205 208 223 227 234 236 252 253 255 256 272 291 294 295
;;; 15 entre 301 et 400
    302 329 332 334 339 348 356 358 360 361 362 363 368 384 399 
;;; 12 entre 401 et 500
    426 434 443 446 461 462 466 472 482 484 495 499
;;; 26 entre 501 et 600
    504 505 513 517 522 524 527 530 532 538 544 548 551 556 561 562 563 564 567 576 580 585 586 587 590 600
;;; 8 entre 601 et 700
    602 614 630 632 636 650 665 700
;;; 13 entre 701 et 800
    702 717 718 724 725 732 749 750 753 755 763 772 787
;;; 10 entre 801 et 900
    817 827 828 836 841 843 860 864 878 882
;;; xxx entre 901 et 1000


;;;;;;;;;;;;;;;;
;;; 24 entre 479 et 578
    482 484 495 499 504 505 513 517 522 524 527 530 532 538 544 548 551 556 561 562 563 564 567 576
;;; 48 entre 1686 et 1785
    1686 1688 1689 1690 1692 1693 1694 1695 1697 1698 1699 1700 1701 1702 1704 1706 1710 1711 1712 1713 1717 1723 1726 1731 1738 1742 1743 1744 1746 1747 1748 1749 1751 1753 1756 1760 1761 1762 1763 1764 1767 1768 1770 1773 1774 1775 1781 1782
;;; 69 entre 3375 et 3474
    3375 3376 3377 3378 3379 3380 3382 3383 3384 3385 3386 3387 3388 3389 3390 3391 3392 3395 3396 3399 3403 3404 3405 3406 3407 3408 3409 3410 3412 3413 3414 3415 3416 3418 3421 3422 3423 3424 3425 3426 3429 3432 3433 3434 3435 3436 3437 3438 3440 3443 3444 3446 3447 3448 3449 3450 3451 3452 3453 3455 3457 3459 3461 3464 3465 3466 3467 3470 3472
;;; 93 entre 6031 et 6130
    6031 6032 6034 6035 6036 6037 6038 6039 6040 6041 6042 6043 6044 6045 6046 6047 6048 6050 6051 6052 6053 6054 6055 6056 6057 6058 6059 6060 6061 6062 6063 6064 6065 6066 6067 6068 6069 6070 6071 6072 6073 6074 6075 6076 6077 6078 6079 6080 6081 6082 6083 6084 6085 6086 6087 6088 6089 6090 6091 6092 6093 6094 6095 6096 6098 6099 6100 6101 6102 6104 6105 6107 6108 6109 6110 6111 6112 6113 6114 6115 6116 6117 6118 6119 6121 6122 6123 6125 6126 6127 6128 6129 6130
;;; 93 entre 7849 et 7948
    7849 7850 7851 7852 7853 7854 7855 7856 7857 7858 7859 7860 7861 7862 7863 7864 7865 7866 7868 7869 7870 7871 7872 7873 7874 7875 7876 7877 7878 7879 7880 7881 7882 7883 7884 7885 7887 7888 7889 7890 7891 7892 7893 7894 7895 7896 7897 7898 7899 7900 7901 7902 7903 7904 7905 7906 7907 7908 7909 7910 7911 7912 7913 7914 7915 7916 7917 7918 7920 7921 7922 7923 7924 7925 7927 7929 7930 7932 7933 7934 7935 7936 7937 7938 7939 7940 7941 7942 7944 7945 7946 7947 7948
;;; 71 entre 10276 et 10375
    10276 10277 10278 10279 10280 10281 10282 10283 10285 10286 10287 10290 10291 10294 10295 10296 10297 10298 10300 10304 10305 10306 10307 10308 10309 10310 10311 10313 10314 10315 10317 10319 10321 10324 10325 10326 10328 10330 10331 10333 10334 10336 10338 10340 10341 10342 10343 10344 10345 10346 10347 10348 10349 10351 10353 10354 10355 10356 10357 10358 10359 10361 10362 10363 10364 10365 10368 10371 10372 10374 10375
;;; 86 entre 13207 et 13306
    13207 13208 13209 13210 13212 13213 13214 13215 13216 13217 13218 13220 13222 13223 13224 13225 13226 13227 13228 13230 13232 13233 13234 13235 13236 13237 13239 13240 13241 13242 13243 13245 13246 13247 13248 13249 13250 13251 13252 13253 13254 13255 13257 13260 13261 13262 13263 13264 13265 13266 13267 13270 13271 13272 13273 13274 13275 13276 13277 13278 13279 13280 13281 13282 13283 13284 13285 13286 13287 13288 13289 13290 13291 13292 13293 13294 13295 13296 13298 13299 13300 13301 13302 13303 13304 13305
;;; 96 entre 17813 et 17912

))



(length$ ?*TE-B3*)






----------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------

Calculs refaits avec CSP-Rules-V2.1
in B3B
(bind ?*print-actions* FALSE)
(bind ?*print-RS-after-Singles* FALSE)
(bind ?*print-RS-after-whips[1]* FALSE)
(bind ?*print-solution* FALSE)
(bind ?*print-final-RS* FALSE)
(bind ?*print-hypothesis* FALSE)

(defglobal ?*grids-file* = "/Users/berthier/Projects/CSP-Rules-Results/SudoRules-Results/HARDEST-PUZZLES/Elevens-hardest-V2-26370/puzzles.txt")
(defglobal ?*solns-file* =
    "/Users/berthier/Projects/CSP-Rules-Results/SudoRules-Results/HARDEST-PUZZLES/Elevens-hardest-V2-26370/solutions.txt")

(solve-n-grids-after-first-p-from-text-file ?*grids-file* 0 1000)
;;; computer = MacBookPro 16'' M1Max 2021 3.2GHz, 64GB LPDDR5, MacOS 13.0.1
;;; TOTAL OUTER TIME = 90h 11m 53.5s
;;; TOTAL RESOLUTION TIME = 90h 10m 38.84s
;;; MAX TIME = 16m 13.54s
(length$ ?*solved-list*)
118
?*solved-list*
(114 117 124 150 153 160 188 205 208 223 227 234 236 252 253 255 256 272 291 294 295 302 329 332 334 339 348 356 358 360 361 362 363 368 384 399 426 434 443 446 461 462 466 472 482 484 495 499 504 505 513 517 522 524 527 530 532 538 544 548 551 556 561 562 563 564 567 576 580 585 586 587 588 590 600 602 614 630 632 636 650 665 700 702 717 718 724 725 732 749 750 753 755 763 772 787 817 827 828 836 841 843 860 864 878 882 901 928 939 944 948 952 963 969 979 982 992 997)




(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 1685 100 ?*TE-B2*)
;;; computer = MacBookPro 16'' M1Max 2021 3.2GHz, 64GB LPDDR5, MacOS 13.0.1
;;; TOTAL OUTER TIME = 6h 44m 43.66s
;;; TOTAL RESOLUTION TIME = 6h 44m 39.13s
;;; MAX TIME = 12m 12.03s

(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 3374 100 ?*TE-B2*)
;;; computer = MacBookPro 16'' M1Max 2021 3.2GHz, 64GB LPDDR5, MacOS 13.0.1
;;; TOTAL OUTER TIME = 6h 5m 12.65s
;;; TOTAL RESOLUTION TIME = 6h 5m 9.46s
;;; MAX TIME = 11m 52.46s

(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 6030 100 ?*TE-B2*)
;;; TOTAL OUTER TIME = 3h 36m 43.04s
;;; TOTAL RESOLUTION TIME = 3h 36m 41.53s
;;; MAX TIME = 11m 42.22s

(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 7848 100 ?*TE-B2*)
;;; computer = MacBookPro 16'' M1Max 2021 3.2GHz, 64GB LPDDR5, MacOS 13.0.1
;;; TOTAL OUTER TIME = 1h 16m 28.22s
;;; TOTAL RESOLUTION TIME = 1h 16m 27.18s
;;; MAX TIME = 6m 48.03s

(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 10275 100 ?*TE-B2*)
;;; computer = MacBookPro 16'' M1Max 2021 3.2GHz, 64GB LPDDR5, MacOS 13.0.1
;;; TOTAL OUTER TIME = 5h 30m 56.73s
;;; TOTAL RESOLUTION TIME = 5h 30m 53.66s
;;; MAX TIME = 14m 22.07s

(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 13206 100 ?*TE-B2*)
;;; computer = MacBookPro 16'' M1Max 2021 3.2GHz, 64GB LPDDR5, MacOS 13.0.1
;;; TOTAL OUTER TIME = 3h 54m 16.29s
;;; TOTAL RESOLUTION TIME = 3h 54m 14.4s
;;; MAX TIME = 12m 34.97s

(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 17812 100 ?*TE-B2*)
;;; computer = MacBookPro 16'' M1Max 2021 3.2GHz, 64GB LPDDR5, MacOS 13.0.1
;;; TOTAL OUTER TIME = 2h 17m 53.29s
;;; TOTAL RESOLUTION TIME = 2h 17m 52.26s
;;; MAX TIME = 12m 26.6s



(defglobal ?*TE-[B2]+B3* = (create$
    ;;; 118 entre 1 et 1000 (#588 added)
    114 117 124 150 153 160 188 205 208 223 227 234 236 252 253 255 256 272 291 294 295 302 329 332 334 339 348 356 358 360 361 362 363 368 384 399 426 434 443 446 461 462 466 472 482 484 495 499 504 505 513 517 522 524 527 530 532 538 544 548 551 556 561 562 563 564 567 576 580 585 586 587 588 590 600 602 614 630 632 636 650 665 700 702 717 718 724 725 732 749 750 753 755 763 772 787 817 827 828 836 841 843 860 864 878 882 901 928 939 944 948 952 963 969 979 982 992 997
))
    
(defglobal ?*TE-[B2]+B3* = (create$
    ;;; 0 entre 1 et 4 inclus
    ;;; 0 entre 5 et 24 inclus
    ;;; 0 entre 25 et 58 inclus
    ;;; 0 entre 59 et 106 inclus
    ;;; 9 entre 107 et 215 inclus
    114 117 124 150 153 160 188 205 208
    ;;; 35 entre 216 et 478 inclus
    223 227 234 236 252 253 255 256 272 291 294 295 302 329 332 334 339 348 356 358 360 361 362 363 368 384 399 426 434 443 446 461 462 466 472
;;;;;;;;; 1st 100s
    ;;; 24 entre 479 et 578 inclus
    482 484 495 499 504 505 513 517 522 524 527 530 532 538 544 548 551 556 561 562 563 564 567 576
    ;;; 44 entre 1686 et 1785 inclus (1762 missing, because in B2B)
    1686 1688 1689 1690 1692 1693 1694 1695 1698 1699 1701 1702 1704 1706 1710 1711 1712 1717 1723 1726 1731 1738 1742 1743 1744 1746 1747 1748 1749 1751 1753 1756 1760 1761 1763 1764 1767 1768 1770 1773 1774 1775 1781 1782
    ;;; 61 entre 3375 et 3474 inclus
    3375 3376 3377 3378 3379 3380 3382 3384 3385 3386 3387 3388 3389 3390 3391 3392 3395 3396 3399 3403 3406 3407 3410 3412 3413 3414 3416 3418 3421 3422 3423 3424 3425 3426 3429 3432 3433 3435 3436 3437 3438 3440 3443 3444 3447 3448 3449 3450 3451 3452 3454 3455 3457 3459 3461 3464 3465 3466 3467 3470 3472
    ;;; 69 entre 6031 et 6130 inclus
    6031 6032 6034 6035 6036 6037 6039 6042 6043 6044 6045 6046 6047 6050 6052 6054 6056 6057 6059 6060 6063 6065 6068 6070 6071 6073 6074 6075 6078 6079 6080 6081 6083 6084 6085 6086 6087 6089 6090 6091 6092 6093 6094 6095 6096 6098 6099 6100 6102 6104 6105 6107 6108 6109 6110 6111 6112 6113 6114 6115 6116 6118 6119 6121 6122 6123 6127 6128 6129
    ;;; 22 entre 7849 et 7948 inclus
    7851 7854 7862 7864 7869 7871 7872 7873 7875 7876 7878 7883 7898 7906 7908 7910 7912 7914 7916 7920 7924 7942
    ;;; 48 entre 10276 et 10375 inclus
    10276 10277 10278 10279 10280 10281 10282 10283 10285 10286 10287 10290 10291 10294 10295 10296 10297 10300 10305 10306 10309 10310 10313 10314 10317 10324 10326 10330 10331 10334 10336 10338 10340 10342 10343 10345 10347 10349 10353 10354 10357 10359 10361 10363 10365 10371 10374 10375
    ;;; 53 entre 13207 et 13306 inclus (same)
    13207 13209 13212 13215 13220 13222 13223 13224 13225 13228 13232 13233 13235 13236 13241 13243 13245 13246 13249 13252 13260 13261 13262 13265 13267 13271 13272 13273 13275 13276 13277 13279 13280 13281 13283 13284 13285 13286 13287 13288 13289 13290 13292 13294 13296 13298 13299 13300 13301 13302 13303 13304 13305
    ;;; 45 entre 17813 et 17912 inclus
    17813 17814 17818 17820 17821 17827 17830 17831 17833 17834 17835 17837 17838 17841 17842 17843 17848 17849 17852 17853 17856 17857 17858 17860 17861 17862 17863 17866 17867 17876 17879 17880 17882 17884 17885 17886 17887 17889 17891 17893 17901 17905 17909 17911 17912
))


(defglobal ?*TE-B3* = (sorted-union$ ?*TE-B2* ?*solved-list* 17912))

(defglobal ?*TE-B3* = (create$
    ;;; 0 entre 1 et 4 inclus
    ;;; 0 entre 5 et 24 inclus
    ;;; 0 entre 25 et 58 inclus
    ;;; 0 entre 59 et 106 inclus
    ;;; 9 entre 107 et 215 inclus
    114 117 124 150 153 160 188 205 208
    ;;; 35 entre 216 et 478 inclus
    223 227 234 236 252 253 255 256 272 291 294 295 302 329 332 334 339 348 356 358 360 361 362 363 368 384 399 426 434 443 446 461 462 466 472
;;;;;;;;; 1st 100s
    ;;; 24 entre 479 et 578 inclus
    482 484 495 499 504 505 513 517 522 524 527 530 532 538 544 548 551 556 561 562 563 564 567 576
    ;;; 48 entre 1686 et 1785 inclus
    1686 1688 1689 1690 1692 1693 1694 1695 1697 1698 1699 1700 1701 1702 1704 1706 1710 1711 1712 1713 1717 1723 1726 1731 1738 1742 1743 1744 1746 1747 1748 1749 1751 1753 1756 1760 1761 1762 1763 1764 1767 1768 1770 1773 1774 1775 1781 1782
    ;;; 70 entre 3375 et 3474 inclus (3454 is new)
    3375 3376 3377 3378 3379 3380 3382 3383 3384 3385 3386 3387 3388 3389 3390 3391 3392 3395 3396 3399 3403 3404 3405 3406 3407 3408 3409 3410 3412 3413 3414 3415 3416 3418 3421 3422 3423 3424 3425 3426 3429 3432 3433 3434 3435 3436 3437 3438 3440 3443 3444 3446 3447 3448 3449 3450 3451 3452 3453 3454 3455 3457 3459 3461 3464 3465 3466 3467 3470 3472
    ;;; 93 entre 6031 et 6130 inclus (same)
    6031 6032 6034 6035 6036 6037 6038 6039 6040 6041 6042 6043 6044 6045 6046 6047 6048 6050 6051 6052 6053 6054 6055 6056 6057 6058 6059 6060 6061 6062 6063 6064 6065 6066 6067 6068 6069 6070 6071 6072 6073 6074 6075 6076 6077 6078 6079 6080 6081 6082 6083 6084 6085 6086 6087 6088 6089 6090 6091 6092 6093 6094 6095 6096 6098 6099 6100 6101 6102 6104 6105 6107 6108 6109 6110 6111 6112 6113 6114 6115 6116 6117 6118 6119 6121 6122 6123 6125 6126 6127 6128 6129 6130
    ;;; 93 entre 7849 et 7948 inclus (same)
    7849 7850 7851 7852 7853 7854 7855 7856 7857 7858 7859 7860 7861 7862 7863 7864 7865 7866 7868 7869 7870 7871 7872 7873 7874 7875 7876 7877 7878 7879 7880 7881 7882 7883 7884 7885 7887 7888 7889 7890 7891 7892 7893 7894 7895 7896 7897 7898 7899 7900 7901 7902 7903 7904 7905 7906 7907 7908 7909 7910 7911 7912 7913 7914 7915 7916 7917 7918 7920 7921 7922 7923 7924 7925 7927 7929 7930 7932 7933 7934 7935 7936 7937 7938 7939 7940 7941 7942 7944 7945 7946 7947 7948
    ;;; 71 entre 10276 et 10375 inclus (same)
    10276 10277 10278 10279 10280 10281 10282 10283 10285 10286 10287 10290 10291 10294 10295 10296 10297 10298 10300 10304 10305 10306 10307 10308 10309 10310 10311 10313 10314 10315 10317 10319 10321 10324 10325 10326 10328 10330 10331 10333 10334 10336 10338 10340 10341 10342 10343 10344 10345 10346 10347 10348 10349 10351 10353 10354 10355 10356 10357 10358 10359 10361 10362 10363 10364 10365 10368 10371 10372 10374 10375
    ;;; 86 entre 13207 et 13306 inclus (same)
    13207 13208 13209 13210 13212 13213 13214 13215 13216 13217 13218 13220 13222 13223 13224 13225 13226 13227 13228 13230 13232 13233 13234 13235 13236 13237 13239 13240 13241 13242 13243 13245 13246 13247 13248 13249 13250 13251 13252 13253 13254 13255 13257 13260 13261 13262 13263 13264 13265 13266 13267 13270 13271 13272 13273 13274 13275 13276 13277 13278 13279 13280 13281 13282 13283 13284 13285 13286 13287 13288 13289 13290 13291 13292 13293 13294 13295 13296 13298 13299 13300 13301 13302 13303 13304 13305
    ;;; 96 entre 17813 et 17912 inclus (same)

))
