


calculs faits avec SudoRules13 version M7Wbis2B22, puis avec SudoRules-15c.1.12 basé sur CSP-Rules-1.0



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Ce qui est chargé

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;




(defglobal ?*SudoDir* = "/Users/berthier/Documents/INT-Projets/SudoRules/SudoRules13/")
(defglobal ?*RulesDir* = (str-cat ?*SudoDir* "Rules/"))

(defglobal ?*PuzzlesDir* = (str-cat "/Users/berthier/Documents/INT-Projets/SudoRules/SudoRules15b/" "Results/"))
(defglobal ?*grids-file* = (str-cat ?*PuzzlesDir* "Eleven-hardest-V2-26370/puzzles.txt"))
(defglobal ?*grids-file* = "/Users/berthier/Desktop/Eleven-hardest-V2-26370/puzzles.txt")

(defglobal ?*inference-engine* = CLIPS)
; (defglobal ?*inference-engine* = JESS)
(defglobal ?*rating-type* = "B")


(batch (str-cat ?*SudoDir* "Loaders/L0.clp"))
(load (str-cat ?*RulesDir* "T&E/contexts.clp"))
(load (str-cat ?*RulesDir* "T&E/TE1.clp"))
(bind ?*print-actions* FALSE)
(bind ?*print-hypothesis* FALSE)
(bind ?*print-solution* FALSE)


(load (str-cat ?*RulesDir* "SUBINT/L1-N1-naked-single.clp"))
(load (str-cat ?*RulesDir* "SUBINT/L1-H1-hidden-single.clp"))
(load (str-cat ?*RulesDir* "SUBINT/L1-RCiB.clp"))
(load (str-cat ?*RulesDir* "SUBINT/L1-BiRC.clp"))

(bind ?*SudoRulesSubVersionNumber* 7wbis2B22)
(bind ?*SudoRulesLevelSymbol* pB-NRCZT)



(load (str-cat ?*RulesDir* "CHAINS3D-M7wbis2/L2-BIVAL3D.clp"))


(load (str-cat ?*RulesDir* "CHAINS3D-M7wbis2/L2-NRCZT2.clp"))
(load (str-cat ?*RulesDir* "BRAIDS3D-M7wbis2-B22/L2-B-NRCZT2.clp"))

(load (str-cat ?*RulesDir* "CHAINS3D-M7wbis2/L3-NRCZT3.clp"))
(load (str-cat ?*RulesDir* "BRAIDS3D-M7wbis2-B22/L3-B-NRCZT3.clp"))

(load (str-cat ?*RulesDir* "CHAINS3D-M7wbis2/L4-NRCZT4.clp"))
(load (str-cat ?*RulesDir* "BRAIDS3D-M7wbis2-B22/L4-B-NRCZT4.clp"))


(bind ?*print-actions* FALSE)
(bind ?*print-hypothesis* FALSE)
(bind ?*print-levels* FALSE)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

B4

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


EN COURS:
(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 13206 100 ?*TE-B3*); 1st 100 10.7
(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 17812 100 ?*TE-B3*); 1st 100 10.6

TODO (series of 1st 100''s):
(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 7848 100 ?*TE-B3*); 1st 100 10.9
(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 10275 100 ?*TE-B3*); 1st 100 10.8
(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 13206 100 ?*TE-B3*); 1st 100 10.7
(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 17812 100 ?*TE-B3*); 1st 100 10.6


?*no-sol-list*
(length$ ?*solved-list*)
(pretty-print-ordered-nb-list ?*solved-list* 100)


(defglobal ?*TE-[B3]+B4* = (create$
;;; 4 entre 1 et 50
    7 33 36 42 
;;; 14 entre 51 et 100
    58 60 61 62 63 67 71 74 75 76 77 82 83 96 
;;; 28 entre 101 et 150
    101 104 105 106 107 108 110 111 112 113 116 118 119 120 123 125 127 128 129 132 133 134 137 139 140 142 146 147 
;;; 26 entre 151 et 200
    151 152 157 158 162 163 166 167 168 169 170 173 178 180 181 182 183 184 185 190 192 193 194 196 198 200 
;;; 28 entre 201 et 250
    202 206 209 
    ;;; coupure de courant ; repris à 210
    211 212 213 216 217 219 220 221 222 224 225 228 229 231 232 238 239 240 243 245 246 247 248 249 250
;;; reprise avec SudoRules-15c.1.12 basé sur CSP-Rules-1.0
;;; 22 entre 251 et 300
    251 254 258 259 260 265 266 269 270 274 275 276 277 278 282 283 284 286 292 293 297 298 
;;; 20 entre 301 et 350
    301 306 310 311 314 318 319 320 322 323 326 328 331 333 336 337 340 341 347 350
;;; 21 entre 351 et 400
    351  353 354 366 367 373 374 376 377 379 382 385 386 387 388 389 390 392 395 398 400 
;;; 31 entre 401 et 450
    401 402 403 404 405 406 408 409 410 411 412 413 415 417 419 420 421 423 424 425 427 428 429 430 433 435 438 439 440 442 445
;;; 33 entre 451 et 500
    451 454 457 458 459 460 464 467 468 469 470 471 474 476 478 479 480 481 483 485 486 487 488 489 490 491 492 493 494 496 497 498 500

;;; 30 entre 501 et 550
    501 503 506 507 508 509 510 511 512 514 516 518 520 521 523 525 526 528 533 535 537 539 540 541 542 543 545 546 547 549
;;; 29 entre 551 et 600
    552 553 554 555 557 558 559 560 565 569 570 571 572 573 577 578 579 581 582 584 588 589 591 592 593 594 595 596 598
;;; 37 entre 601 et 650
    601 603 604 605 606 607 608 609 611 612 613 616 617 619 620 621 622 623 624 626 627 628 629 631 635 638 639 640 641 642 643 644 645 646 647 648 649 
;;; 39 entre 651 et 700
    651 652 654 655 656 658 660 661 662 663 666 667 668 669 670 671 672 673 674 675 676 677 678 680 681 683 684 685 686 687 688 690 691 692 694 695 696 697 698 
;;; 29 entre 701 et 750
    701 706 707 709 710 711 712 719 720 721 722 723 727 728 729 731 734 735 736 737 738 741 742 743 744 745 746 747 748
;;; xxx entre 751 et 800

;;; xxx entre 801 et 850

;;; xxx entre 851 et 900

;;; xxx entre 901 et 950

;;; xxx entre 951 et 1000


;;;;;;;;;;;;;;;;
;;; 64 entre 479 et 578
    479 480 481 483 485 486 487 488 489 490 491 492 493 494 496 497 498 500 501 503 506 507 508 509 510 511 512 514 516 518 520 521 523 525 526 528 533 535 537 539 540 541 542 543 545 546 547 549 552 553 554 555 557 558 559 560 565 569 570 571 572 573 577 578
;;; 44 entre 1686 et 1785
    1687 1691 1696 1703 1705 1707 1708 1709 1714 1715 1716 1718 1719 1721 1722 1724 1727 1728 1729 1730 1733 1734 1735 1736 1737 1739 1740 1741 1745 1750 1754 1757 1758 1759 1765 1766 1771 1772 1776 1778 1779 1780 1783 1784
;;; 30 entre 3375 et 3474
    3381 3393 3394 3398 3400 3401 3402 3411 3417 3419 3420 3427 3428 3430 3431 3439 3441 3442 3445 3454 3456 3458 3460 3462 3463 3468 3469 3471 3473 3474
;;; 7 entre 6031 et 6130
    6033 6049 6097 6103 6106 6120 6124
;;; 7 entre 7849 et 7948
    7867 7886 7919 7926 7928 7931 7943
;;; 28 entre 10276 et 10375
    10288 10289 10292 10293 10299 10301 10302 10303 10312 10316 10318 10320 10322 10323 10327 10329 10332 10335 10337 10339 10350 10352 10360 10366 10367 10369 10370 10373
;;; 14 entre 13207 et 13306
    13211 13219 13221 13229 13231 13238 13244 13256 13258 13259 13268 13269 13297 13306
;;; 4 entre 17813 et 17912
    17845 17883 17895 17907
))


(length$  ?*TE-[B3]+B4*)


515 543 626(solved) 631(solved) 737 1771 (seulement en phase 2) 10329 non-whip braid[3]




essai de 232 avec new CSP-Rules1.0: 4303 s au lieu de 4909


Non-Whip BRAID[3] dans 277, 336 (many), 352, 395, 423, 435, 460 480 490 666 




(defglobal ?*TE-B4* = (sorted-union$ ?*TE-B3* ?*TE-[B3]+B4* 26370))
(length$ ?*TE-B4*)
(pretty-print-ordered-nb-list ?*TE-B4* 100)

(defglobal ?*TE-B4* = (create$
;;; 4 entre 1 et 50
    7 33 36 42 
;;; 14 entre 51 et 100
    58 60 61 62 63 67 71 74 75 76 77 82 83 96 
;;; 32 entre 101 et 150
    101 104 105 106 107 108 110 111 112 113 114 116 117 118 119 120 123 124 125 127 128 129 132 133 134 137 139 140 142 146 147 150
;;; 29 entre 151 et 200
    151 152 153 157 158 160 162 163 166 167 168 169 170 173 178 180 181 182 183 184 185 188 190 192 193 194 196 198 200 
;;; 34 entre 201 et 250
    202 205 206 208 209 211 212 213 216 217 219 220 221 222 223 224 225 227 228 229 231 232 234 236 238 239 240 243 245 246 247 248 249 250
;;; 30 entre 251 et 300
    251 252 253 254 255 256 258 259 260 265 266 269 270 272 274 275 276 277 278 282 283 284 286 291 292 293 294 295 297 298 
;;; 26 entre 301 et 350
    301 302 306 310 311 314 318 319 320 322 323 326 328 329 331 332 333 334 336 337 339 340 341 347 348 350
;;; 30 entre 351 et 400
    351 353 354 356 358 360 361 362 363 366 367 368 373 374 376 377 379 382 384 385 386 387 388 389 390 392 395 398 399 400
;;; 35 entre 401 et 450
    401 402 403 404 405 406 408 409 410 411 412 413 415 417 419 420 421 423 424 425 426 427 428 429 430 433 434 435 438 439 440 442 443 445 446
;;; 41 entre 451 et 500
    451 454 457 458 459 460 461 462 464 466 467 468 469 470 471 472 474 476 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500
  
;;; 42 entre 501 et 550
    501 503 504 505 506 507 508 509 510 511 512 513 514 516 517 518 520 521 522 523 524 525 526 527 528 530 532 533 535 537 538 539 540 541 542 543 544 545 546 547 548 549
;;; 43 entre 551 et 600
    551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 567 569 570 571 572 573 576 577 578 579 580 581 582 584 585 586 587 588 589 590 591 592 593 594 595 596 598 600
;;; 43 entre 601 et 650
    601 602 603 604 605 606 607 608 609 611 612 613 614 616 617 619 620 621 622 623 624 626 627 628 629 630 631 632 635 636 638 639 640 641 642 643 644 645 646 647 648 649 650
;;; 41 entre 651 et 700
    651 652 654 655 656 658 660 661 662 663 665 666 667 668 669 670 671 672 673 674 675 676 677 678 680 681 683 684 685 686 687 688 690 691 692 694 695 696 697 698 700
;;; 37 entre 701 et 750
    701 702 706 707 709 710 711 712 717 718 719 720 721 722 723 724 725 727 728 729 731 732 734 735 736 737 738 741 742 743 744 745 746 747 748 749 750
;;; xxx entre 751 et 800
;;; xxx entre 801 et 850
;;; xxx entre 851 et 900
;;; xxx entre 901 et 950
;;; xxx entre 951 et 1000


;;;;;;;;;;;;;;;;
;;; 88 entre 479 et 578
    479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 503 504 505 506 507 508 509 510 511 512 513 514 516 517 518 520 521 522 523 524 525 526 527 528 530 532 533 535 537 538 539 540 541 542 543 544 545 546 547 548 549 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 567 569 570 571 572 573 576 577 578
;;; 92 entre 1686 et 1785
    1686 1687 1688 1689 1690 1691 1692 1693 1694 1695 1696 1697 1698 1699 1700 1701 1702 1703 1704 1705 1706 1707 1708 1709 1710 1711 1712 1713 1714 1715 1716 1717 1718 1719 1721 1722 1723 1724 1726 1727 1728 1729 1730 1731 1733 1734 1735 1736 1737 1738 1739 1740 1741 1742 1743 1744 1745 1746 1747 1748 1749 1750 1751 1753 1754 1756 1757 1758 1759 1760 1761 1762 1763 1764 1765 1766 1767 1768 1770 1771 1772 1773 1774 1775 1776 1778 1779 1780 1781 1782 1783 1784
;;; 99 entre 3375 et 3474
    3375 3376 3377 3378 3379 3380 3381 3382 3383 3384 3385 3386 3387 3388 3389 3390 3391 3392 3393 3394 3395 3396 3398 3399 3400 3401 3402 3403 3404 3405 3406 3407 3408 3409 3410 3411 3412 3413 3414 3415 3416 3417 3418 3419 3420 3421 3422 3423 3424 3425 3426 3427 3428 3429 3430 3431 3432 3433 3434 3435 3436 3437 3438 3439 3440 3441 3442 3443 3444 3445 3446 3447 3448 3449 3450 3451 3452 3453 3454 3455 3456 3457 3458 3459 3460 3461 3462 3463 3464 3465 3466 3467 3468 3469 3470 3471 3472 3473 3474
;;; 100 entre 6031 et 6130
    6031 6032 6033 6034 6035 6036 6037 6038 6039 6040 6041 6042 6043 6044 6045 6046 6047 6048 6049 6050 6051 6052 6053 6054 6055 6056 6057 6058 6059 6060 6061 6062 6063 6064 6065 6066 6067 6068 6069 6070 6071 6072 6073 6074 6075 6076 6077 6078 6079 6080 6081 6082 6083 6084 6085 6086 6087 6088 6089 6090 6091 6092 6093 6094 6095 6096 6097 6098 6099 6100 6101 6102 6103 6104 6105 6106 6107 6108 6109 6110 6111 6112 6113 6114 6115 6116 6117 6118 6119 6120 6121 6122 6123 6124 6125 6126 6127 6128 6129 6130
;;; 100 entre 7849 et 7948
    7849 7850 7851 7852 7853 7854 7855 7856 7857 7858 7859 7860 7861 7862 7863 7864 7865 7866 7867 7868 7869 7870 7871 7872 7873 7874 7875 7876 7877 7878 7879 7880 7881 7882 7883 7884 7885 7886 7887 7888 7889 7890 7891 7892 7893 7894 7895 7896 7897 7898 7899 7900 7901 7902 7903 7904 7905 7906 7907 7908 7909 7910 7911 7912 7913 7914 7915 7916 7917 7918 7919 7920 7921 7922 7923 7924 7925 7926 7927 7928 7929 7930 7931 7932 7933 7934 7935 7936 7937 7938 7939 7940 7941 7942 7943 7944 7945 7946 7947 7948
;;; 99 entre 10276 et 10375

;;; 100 entre 13207 et 13306

;;; 100 entre 17813 et 17912

))



(length$ ?*TE-B4*)











----------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------

Calculs refaits avec CSP-Rules-V2.1 pour les 106 puzzles avec SER >= 11.6

(bind ?*print-actions* FALSE)
(bind ?*print-RS-after-Singles* FALSE)
(bind ?*print-RS-after-whips[1]* FALSE)
(bind ?*print-solution* FALSE)
(bind ?*print-final-RS* FALSE)
(bind ?*print-hypothesis* FALSE)

(defglobal ?*grids-file* = "/Users/berthier/Projects/CSP-Rules-Results/SudoRules-Results/HARDEST-PUZZLES/Elevens-hardest-V2-26370/puzzles.txt")
(defglobal ?*solns-file* =
    "/Users/berthier/Projects/CSP-Rules-Results/SudoRules-Results/HARDEST-PUZZLES/Elevens-hardest-V2-26370/solutions.txt")

Between 1 and 106, in B4B (there''s none in B3B):
(solve-n-grids-after-first-p-from-text-file-knowing-solutions
    ?*grids-file*
    ?*solns-file*
    0 106
)
;;; computer = MacBookPro 16'' M1Max 2021 3.2GHz, 64GB LPDDR5, MacOS 13.0.1
;;; TOTAL OUTER TIME = 25h 18m 29.73s
;;; TOTAL RESOLUTION TIME = 25h 18m 22.14s
;;; MAX TIME = 43m 32.25s
?*solved-list*
(7 33 36 42 58 60 61 62 63 67 71 74 75 76 77 82 83 96 101 104 105 106)
(length$ ?*solved-list*)
22
same list !

(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 106 109 ?*TE-B3*)
;;; computer = MacBookPro 16'' M1Max 2021 3.2GHz, 64GB LPDDR5, MacOS 13.0.1
;;; TOTAL OUTER TIME = 26h 34m 55.89s
;;; TOTAL RESOLUTION TIME = 26h 34m 49.95s
;;; MAX TIME = 41m 8.84s

(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file*  215 263 ?*TE-B3*)
;;; computer = MacBookPro 16'' M1Max 2021 3.2GHz, 64GB LPDDR5, MacOS 13.0.1
;;; TOTAL OUTER TIME = 66h 30m 24.99s
;;; TOTAL RESOLUTION TIME = 66h 30m 11.33s
;;; MAX TIME = 54m 52.32s

(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file*  478 100 ?*TE-B3*)
;;; computer = MacBookPro 16'' M1Max 2021 3.2GHz, 64GB LPDDR5, MacOS 13.0.1
;;; TOTAL OUTER TIME = 19h 23m 42.27s
;;; TOTAL RESOLUTION TIME = 19h 23m 39.42s
;;; MAX TIME = 54m 8.1s

(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 1685 100 ?*TE-B3*)
;;; computer = MacBookPro 16'' M1Max 2021 3.2GHz, 64GB LPDDR5, MacOS 13.0.1
;;; TOTAL OUTER TIME = 12h 53m 32.4s
;;; TOTAL RESOLUTION TIME = 12h 53m 30.51s
;;; MAX TIME = 46m 54.18s

(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 3374 100 ?*TE-B3*)
;;; computer = MacBookPro 16'' M1Max 2021 3.2GHz, 64GB LPDDR5, MacOS 13.0.1
;;; TOTAL OUTER TIME = 5h 8m 43.19s
;;; TOTAL RESOLUTION TIME = 5h 8m 41.32s
;;; MAX TIME = 31m 59.77s


(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 6030 100 ?*TE-B3*)
;;; computer = MacBookPro 16'' M1Max 2021 3.2GHz, 64GB LPDDR5, MacOS 13.0.1
;;; TOTAL OUTER TIME = 41m 49.39s
;;; TOTAL RESOLUTION TIME = 41m 47.93s
;;; MAX TIME = 13m 39.78s

(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 7848 100 ?*TE-B3*)
;;; computer = MacBookPro 16'' M1Max 2021 3.2GHz, 64GB LPDDR5, MacOS 13.0.1
;;; TOTAL OUTER TIME = 1h 2m 46.7s
;;; TOTAL RESOLUTION TIME = 1h 2m 45.39s
;;; MAX TIME = 19m 32.25s

(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 10275 100 ?*TE-B3*)
;;; computer = MacBookPro 16'' M1Max 2021 3.2GHz, 64GB LPDDR5, MacOS 13.0.1
;;; TOTAL OUTER TIME = 4h 49m 17.52s
;;; TOTAL RESOLUTION TIME = 4h 49m 16.17s
;;; MAX TIME = 24m 14.18s

(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 13206 100 ?*TE-B3*)
;;; computer = MacBookPro 16'' M1Max 2021 3.2GHz, 64GB LPDDR5, MacOS 13.0.1
;;; TOTAL OUTER TIME = 2h 2m 3.31s
;;; TOTAL RESOLUTION TIME = 2h 2m 1.4s
;;; MAX TIME = 16m 12.89s

(solve-n-grids-after-first-p-from-text-file-excluding ?*grids-file* 17812 100 ?*TE-B3*)
;;; computer = MacBookPro 16'' M1Max 2021 3.2GHz, 64GB LPDDR5, MacOS 13.0.1
;;; TOTAL OUTER TIME = 31m 27.13s
;;; TOTAL RESOLUTION TIME = 31m 2



(defglobal ?*TE-[B3]+B4* = (create$
    ;;; 22 entre 1 et 106 inclus
    7 33 36 42 58 60 61 62 63 67 71 74 75 76 77 82 83 96 101 104 105 106
))

(defglobal ?*TE-[B3]+B4* = (create$
    ;;; 0 entre 1 et 4 inclus
    ;;; 1 entre 5 et 24 inclus
    7
    ;;; 4 entre 25 et 58 inclus
    33 36 42 58
    ;;; 17 entre 59 et 106 inclus
    60 61 62 63 67 71 74 75 76 77 82 83 96 101 104 105 106
    ;;; 57 entre 107 et 215 inclus
    107 108 110 111 112 113 116 118 119 120 123 125 127 128 129 132 133 134 137 139 140 142 146 147 151 152 157 158 159 162 163 166 167 168 169 170 173 178 180 181 182 183 184 185 190 192 193 194 196 198 200 202 206 209 211 212 213
    ;;; 131 entre 216 et 478 inclus

;;;;;;;;; 1st 100s
    ;;; 64 entre 479 et 578 inclus
    479 480 481 483 485 486 487 488 489 490 491 492 493 494 496 497 498 500 501 503 506 507 508 509 510 511 512 514 516 518 520 521 523 525 526 528 533 535 537 539 540 541 542 543 545 546 547 549 552 553 554 555 557 558 559 560 565 569 570 571 572 573 577 578
    ;;; 44 entre 1686 et 1785 inclus
    1687 1691 1696 1703 1705 1707 1708 1709 1714 1715 1716 1718 1719 1721 1722 1724 1727 1728 1729 1730 1733 1734 1735 1736 1737 1739 1740 1741 1745 1750 1754 1757 1758 1759 1765 1766 1771 1772 1776 1778 1779 1780 1783 1784
    ;;; 29 entre 3375 et 3474 inclus
    3381 3393 3394 3398 3400 3401 3402 3411 3417 3419 3420 3427 3428 3430 3431 3439 3441 3442 3445 3456 3458 3460 3462 3463 3468 3469 3471 3473 3474
    ;;; 7 entre 6031 et 6130 inclus
    6033 6049 6097 6103 6106 6120 6124
    ;;; 7 entre 7849 et 7948 inclus (same)
    7867 7886 7919 7926 7928 7931 7943
    ;;; 28 entre 10276 et 10375 inclus
    10288 10289 10292 10293 10299 10301 10302 10303 10312 10316 10318 10320 10322 10323 10327 10329 10332 10335 10337 10339 10350 10352 10360 10366 10367 10369 10370 10373
    ;;; 14 entre 13207 et 13306 inclus
    13211 13219 13221 13229 13231 13238 13244 13256 13258 13259 13268 13269 13297 13306
    ;;; 4 entre 17813 et 17912 inclus
    17845 17883 17895 17907
))

(defglobal ?*TE-B4* = (sorted-union$ ?*TE-B3* ?*solved-list* 17912))


(defglobal ?*TE-B4* = (create$
    ;;; 0 entre 1 et 4 inclus
    ;;; 1 entre 5 et 24 inclus
    7
    ;;; 4 entre 25 et 58 inclus
    33 36 42 58
    ;;; 17 entre 1 et 106 inclus
     60 61 62 63 67 71 74 75 76 77 82 83 96 101 104 105 106
    ;;; 66 entre 107 et 215 inclus
    107 108 110 111 112 113 114 116 117 118 119 120 123 124 125 127 128 129 132 133 134 137 139 140 142 146 147 150 151 152 153 157 158 159 160 162 163 166 167 168 169 170 173 178 180 181 182 183 184 185 188 190 192 193 194 196 198 200 202 205 206 208 209 211 212 213
    ;;; 166 entre 216 et 478 inclus

;;;;;;;;; 1st 100s
    ;;; 88 entre 479 et 578 inclus
    479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 503 504 505 506 507 508 509 510 511 512 513 514 516 517 518 520 521 522 523 524 525 526 527 528 530 532 533 535 537 538 539 540 541 542 543 544 545 546 547 548 549 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 567 569 570 571 572 573 576 577 578
    ;;; 92 entre 1686 et 1785 inclus (same)
    1686 1687 1688 1689 1690 1691 1692 1693 1694 1695 1696 1697 1698 1699 1700 1701 1702 1703 1704 1705 1706 1707 1708 1709 1710 1711 1712 1713 1714 1715 1716 1717 1718 1719 1721 1722 1723 1724 1726 1727 1728 1729 1730 1731 1733 1734 1735 1736 1737 1738 1739 1740 1741 1742 1743 1744 1745 1746 1747 1748 1749 1750 1751 1753 1754 1756 1757 1758 1759 1760 1761 1762 1763 1764 1765 1766 1767 1768 1770 1771 1772 1773 1774 1775 1776 1778 1779 1780 1781 1782 1783 1784
    ;;; 99 entre 3375 et 3474 inclus (same, only #3397 remaining)
    3375 3376 3377 3378 3379 3380 3381 3382 3383 3384 3385 3386 3387 3388 3389 3390 3391 3392 3393 3394 3395 3396 3398 3399 3400 3401 3402 3403 3404 3405 3406 3407 3408 3409 3410 3411 3412 3413 3414 3415 3416 3417 3418 3419 3420 3421 3422 3423 3424 3425 3426 3427 3428 3429 3430 3431 3432 3433 3434 3435 3436 3437 3438 3439 3440 3441 3442 3443 3444 3445 3446 3447 3448 3449 3450 3451 3452 3453 3454 3455 3456 3457 3458 3459 3460 3461 3462 3463 3464 3465 3466 3467 3468 3469 3470 3471 3472 3473 3474
    ;;; 100 entre 6031 et 6130 inclus (same) (all)
    ;;; 100 entre 7849 et 7948 inclus (all)
    ;;; 99 entre 10276 et 10375 inclus, #10284 not solved (same)

    ;;; 100 entre 13207 et 13306 inclus (same) (all)
    ;;; 100 entre 17813 et 17912 inclus (same) (all)
))

